연결 리스트

정의와 성질
정의
- 원소들을 저장할 때 그 다음 원소가 있는 위치를 포함하는 방식으로 저장하는 자료구조
- 원소들은 이곳 저곳에 흩어져 있음
- 배열과 달리 원소가 다음 원소를 기억하고 있음

성질
1. k번째 원소를 확인/변경하기 위해 O(k)가 필요함
- ex) 3번째 원소를 확인하기 위해선 1, 2를 확인해야 함
2. 임의의 위치에 원소를 추가/임의 위치의 원소 제거는 O(1)
3. 원소들이 메모리 상에 연속해있지 않아 Cache hit rate가 낮지만 할당이 다소 쉬움

종류
1. 단일 연결 리스트(Singly Linked List)
2. 이중 연결 리스트(Doubly Linked List)
- 이전/다음 원소 위치를 알고 있음
- 정보가 추가되니 메모리를 더 쓴다
- STL에 연결 리스트는 list라는 이름의 컨테이너임 -> 이중 연결 리스트
3. 원형 연결 리스트(Circular Linked List)
- 원소의 끝과 시작이 연결 됨, 이전/다음 원소 모두 들고 있기 가능

배열 vs. 연결 리스트
- 둘 다 선형 자료구조임
1. k번째 원소의 접근: O(1) / O(k)
2. 임의 위치에 원소 추가/제거: O(N) / O(1)
3. 메모리 상의 배치: 연속 / 불연속
4. 추가적으로 필요한 공간(Overhead): 미미함 / O(N)

기능과 구현
1. 임의의 위치에 있는 원소를 확인/변경, O(N)
-  모든 원소는 메모리 어딘가에 있지만 첫번째 원소의 주소만 알고 있기에, O(N)
2. 임의의 위치에 원소를 추가, O(1)
- 메모리 주소를 옮길 필요 없이 다음 원소의 주소만 알려주면 됨
3. 임의 위치의 원소를 제거, O(1)
- 삭제 원소 앞의 원소에 다음 주소를 삭제 원소 다음 주소를 알려주면 됨

임의의 위치에 원소를 추가/제거하는 경우엔 연결 리스트를 사용하는 것이 중요

STL list를 사용하면 되지만 코테에서 안될 경우가 있음
