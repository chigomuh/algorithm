시간복잡도
- 빅오표기법: 가장 대표되는 수식만 표기
- O(N), O(1), 등

주어진 제한시간에 따라 허용 시간복잡도가 달라지기에 꼭 중요하다

공간복잡도
- 입력의 크기와 문제를 해결하는데 필요한 공간의 상관관계
- 크게 신경안써도 되지만
- 메모리가 512MB = int 변수를 1.2억개를 선언할 수 있다는 것만 기억
- 대략 계산해보고 1.2억개보다 많으면 다른 알고리즘 사용, int가 4byte

정수 자료형
char 자료형은 1byte = 8bit
char는 특이하게 첫번째 index는 -2^7이다
unsigned char의 범위: 0~255
char의 범위: -128~127
short: 2byte
int: 4byte
long long: 8byte
int자료형이 빠르고 메모리를 적게 먹지만 80번째 피보나치 같은 경우 long long을 사용
int를 사용할 때 갑자기 -값이 출력되는 경우
integer overflow이다
ex) 127: 01111111, 1: 00000001 을 더한 경우 -128: 10000000이 된다

실수 자료형
float(4byte)
double(8byte)
실수 2진수 표현?
-> 2^-1, 2^-2 등 음수 제곱으로 표현
실수의 성질
1. 실수의 저장/연산 과정에서 반드시 오차가 발생할 수 밖에 없다.
- 무한소수를 저장하는 경우 축약해서 저장하는데(bit의 자리한계)
- 결국 오차가 발생할 수 밖에 없음
- float: 유효숫자 6자리, double: 유효숫자 15자리
- 따라서, 실수 자료형을 사용할 때 double을 사용하는 것이 유효숫자가 크기에 좋다

2. double에 long long 범위의 정수를 함부로 담으면 안된다.
- long long은 19자리 double은 15자리이기에 double에 long long을 담으면 오차가 발생함

3. 실수를 비교할 때는 등호를 사용하면 안된다.
- 대략 오차가 10^-12승보다 낮으면 같다고 판단하면 된다.
- 1e-12 = 10^-12, 10^9 = 1e9